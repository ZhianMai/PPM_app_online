{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","start_date","end_date","to","pathname","state","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","AddProject","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","BooleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","dueDate","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","forEach","task","status","ProjectBoard","getBacklog","BoardContent","length","projectNotFound","role","boardAlgorithm","AddProjectTask","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","SecureRoute","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8591ad32.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n              <p>\r\n                Start date: {project.start_date ? project.start_date : \"TBA\"}\r\n              </p>\r\n              <p>End date: {project.end_date ? project.end_date : \"TBA\"}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/projectBoard/${project.projectIdentifier}`,\r\n                    state: { projectName: project.projectName },\r\n                  }}\r\n                >\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              &nbsp;{user.fullName}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Project & Task Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <br />\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID, 4 to 10 characters long.\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <br />\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <br />\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"end_date\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.end_date,\r\n                      })}\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.end_date && (\r\n                      <div className=\"invalid-feedback\">{errors.end_date}</div>\r\n                    )}\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n\r\n                  <i>&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n                  <Link\r\n                    to={`/dashboard/`}\r\n                    className=\"btn btn-primary btn-light mt-4\"\r\n                  >\r\n                    Cancel\r\n                  </Link>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n\r\n        // TO_DO\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nconst BooleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: BooleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-6 text-center\">Update Project</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <br />\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.end_date,\r\n                    })}\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.end_date && (\r\n                    <div className=\"invalid-feedback\">{errors.end_date}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n                <i>&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n                <Link\r\n                  to={`/dashboard/`}\r\n                  className=\"btn btn-primary btn-light mt-4\"\r\n                >\r\n                  Cancel\r\n                </Link>\r\n              </form>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    switch (project_task.priority) {\r\n      case 1:\r\n        priorityClass = \"bg-danger text-light\";\r\n        priorityString = \"HIGH\";\r\n        break;\r\n      case 2:\r\n        priorityClass = \"bg-warning text-light\";\r\n        priorityString = \"MEDIUM\";\r\n        break;\r\n      case 3:\r\n        priorityClass = \"bg-info text-light\";\r\n        priorityString = \"LOW\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria\r\n              ? project_task.acceptanceCriteria\r\n              : \"-\"}\r\n          </p>\r\n          <p>Due date: {project_task.dueDate ? project_task.dueDate : \"TBA\"}</p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\nexport const addProjectTask =\n  (backlog_id, project_task, history) => async (dispatch) => {\n    try {\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\n      history.push(`/projectBoard/${backlog_id}`);\n      dispatch({\n        type: GET_ERRORS,\n        payload: {},\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    }\n  };\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask =\n  (backlog_id, pt_id, history) => async (dispatch) => {\n    try {\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n      dispatch({\n        type: GET_PROJECT_TASK,\n        payload: res.data,\n      });\n    } catch (err) {\n      history.push(\"/dashboard\");\n    }\n  };\n\nexport const updateProjectTask =\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\n    try {\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n      history.push(`/projectBoard/${backlog_id}`);\n      dispatch({\n        type: GET_ERRORS,\n        payload: {},\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: error.response.data,\n      });\n    }\n  };\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (window.confirm(`Are you sure to delete this task with id: ${pt_id}?`)) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    tasks.forEach((task) => {\r\n      switch (task.props.project_task.status) {\r\n        case \"TO_DO\":\r\n          todoItems.push(task);\r\n          break;\r\n        case \"IN_PROGRESS\":\r\n          inProgressItems.push(task);\r\n          break;\r\n        case \"DONE\":\r\n          doneItems.push(task);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport { Fragment } from \"react\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, projectName } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <Fragment>\r\n        <h1 className=\"alert alert-info text-center card-header\" role=\"alert\">\r\n          {id}\r\n        </h1>\r\n        <div className=\"container\">\r\n          <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n          </Link>\r\n        </div>\r\n        <hr />\r\n        {BoardContent}\r\n        <br />\r\n        <hr />\r\n        <div className=\"container\">\r\n          <Link to={`/dashboard/`} className=\"btn btn-light\">\r\n            Back to Dashboard\r\n          </Link>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h4 className=\"display-6 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <br />\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.end_date,\r\n                    })}\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.end_date && (\r\n                    <div className=\"invalid-feedback\">{errors.end_date}</div>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n                <i>&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n                <Link\r\n                  to={`/projectBoard/${id}`}\r\n                  className=\"btn btn-primary btn-light mt-4\"\r\n                >\r\n                  Cancel\r\n                </Link>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <br />\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <br />\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <br />\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n                <br />\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n                <i>&nbsp;&nbsp;&nbsp;&nbsp;</i>\n                <Link\n                  to={`/projectBoard/${this.state.projectIdentifier}`}\n                  className=\"btn btn-primary btn-light mt-4\"\n                >\n                  Cancel\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      // Do not display login page after logging in\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</i>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      // Do not display login page after logging in\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h4 className=\"display-6 text-center\">Sign Up</h4>\r\n              <h4 className=\"lead text-center\">Create your own Account</h4>\r\n              <br />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      // Do not display login page after logging in\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-6 text-center\">Log In</h1>\r\n              <br />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\n              <SecureRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecureRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecureRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecureRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}